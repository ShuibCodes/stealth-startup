import { useState } from "react";
import { Bot, Send, User } from "lucide-react";

export default function AiChat() {
  const [messages, setMessages] = useState([
    { role: "assistant", content: "Hello! How can I assist you today?" },
  ]);
  const [input, setInput] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (input.trim() === "") return;

    const newMessages = [...messages, { role: "user", content: input }];
    setMessages(newMessages);
    setInput("");
    setIsLoading(true);

    // Simulate AI response
    setTimeout(() => {
      setMessages([
        ...newMessages,
        {
          role: "assistant",
          content:
            "This is a simulated response from the AI. In a real application, this would be generated by an AI model.",
        },
      ]);
      setIsLoading(false);
    }, 1000);
  };

  return (
    <div className="flex h-full bg-gray-100">
      {/* Main chat area */}
      <div className="flex-1 flex flex-col">
        <div className="flex-1 p-4 overflow-auto">
          {messages.map((message, index) => (
            <div
              key={index}
              className={`flex items-start mb-4 ${
                message.role === "user" ? "justify-end" : ""
              }`}
            >
              {message.role === "assistant" && (
                <div className="mr-2">
                  <div>
                    <Bot size={24} />
                  </div>
                </div>
              )}
              <div
                className={`rounded-lg p-3 max-w-[70%] ${
                  message.role === "user"
                    ? "bg-green-500 text-white"
                    : "bg-gray-200"
                }`}
              >
                {message.content}
              </div>
              {message.role === "user" && (
                <div className="ml-2">
                  <div>
                    <User size={24} />
                  </div>
                </div>
              )}
            </div>
          ))}
          {isLoading && (
            <div className="flex items-center text-gray-500">
              <Bot size={24} className="mr-2" />
              AI is typing...
            </div>
          )}
        </div>

        <form onSubmit={handleSubmit} className="p-4 bg-white border-t">
          <div className="flex space-x-2 h-10">
            <input
              value={input}
              onChange={(e) => setInput(e.target.value)}
              placeholder="Type your message..."
              className="flex h-10 w-full rounded-md border border-neutral-200 bg-white px-3 py-2 text-base ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-neutral-950 placeholder:text-neutral-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neutral-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm "
            />
            <button
              type="submit"
              disabled={isLoading}
              className="bg-green-500 h-full px-5 flex items-center text-white font-semibold rounded-md hover:opacity-70 transition duration-150"
            >
              <Send size={18} className="mr-2" />
              Send
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
